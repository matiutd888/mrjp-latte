/* Test boolean operators */

int main () {
  int x;
  {
    int x, y = 10;
    {
      int y;
      int z = 2137;
    }
    assert(x, 0);
    x = 13;
    assert(x, 13);
    y = 26;
    assert(y, 26);
  }
  assert(x, 0);

  string a = "alamakota";
  assertString("ala" + "ma" + "kota", a);
  
  assertBool("a" + "b" + "c" == "a" + "b" + "c");
  assertBool(("ala" + "ma") + ("kota" + "orazpsa") == "alamakotaorazpsa");
  assertBool(("ala" + "ma") + ("kota" + "orazpsa") != "alamakotaorazpsa\n");
  int c = 3;
  c+1;
  c;
  assert(fib(0), 0);
  assert(fib(1), 1);
  assert(fib(2), 1);
  assert(fib(9), 34);
  assert(fib(19), 4181);

  int z = (2 + 2) * 3;
  int d = 2 * (c + z);
  return 0;
}

int fib(int n) {
    int first = 0, second = 1, next;
    int i = 0;
    while (i < n) {
        int dupa;
        next = first + second;
        first = second;
        second = next;
        i++;
    }
    return first;
}

void assertString(string actual, string expected) {
  if (actual != expected) {
    error();
  }
}

void assertBool(boolean x) {
    if (!x) {
        error();
    }
}

void assert(int actual, int expected) {
  if (actual != expected) {
    error();
  }
}
